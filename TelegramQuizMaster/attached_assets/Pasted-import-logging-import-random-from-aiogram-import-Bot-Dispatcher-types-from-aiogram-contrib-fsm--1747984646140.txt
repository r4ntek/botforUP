import logging
import random
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.types import ParseMode
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils.exceptions import BotBlocked, ChatNotFound, TelegramAPIError
from config import BOT_TOKEN

API_TOKEN =BOT_TOKEN

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

class SkillStates(StatesGroup):
    waiting_for_skill = State()

MOTIVATIONAL_MESSAGES = [
    "üí™ –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è, –≤–µ–ª–∏–∫–∏–µ –≤–µ—â–∏ —Ç—Ä–µ–±—É—é—Ç –≤—Ä–µ–º–µ–Ω–∏!",
    "üöÄ –ö–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —É—Å–ø–µ—Ö—É!",
    "‚ùó –û—à–∏–±–∫–∏ ‚Äî —ç—Ç–æ —á–∞—Å—Ç—å –ø—É—Ç–∏ –∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É. –£—á–∏—Å—å –Ω–∞ –Ω–∏—Ö –∏ –¥–≤–∏–≥–∞–π—Å—è –¥–∞–ª—å—à–µ!",
    "‚ú® –¢—ã —Å–ø–æ—Å–æ–±–µ–Ω –Ω–∞ –±–æ–ª—å—à–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å! –í–µ—Ä—å –≤ —Å–µ–±—è!",
    "üåü –ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –î–µ–π—Å—Ç–≤—É–π —Å–µ–π—á–∞—Å!"
]

LEARNING_TIPS = {
    "default": [
        "‚úÖ –†–∞–∑–±–∏–≤–∞–π –±–æ–ª—å—à–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏.",
        "‚è∞ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–∞–∫—Ç–∏–∫—É–π—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –ø–æ —á—É—Ç—å-—á—É—Ç—å.",
        "ü§ù –ò—â–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∏–ª–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
        "üõ†Ô∏è –ù–µ –±–æ–π—Å—è –æ—à–∏–±–∞—Ç—å—Å—è ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—É—á–µ–Ω–∏—è.",
        "üìà –°–ª–µ–¥–∏ –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ —É—Å–ø–µ—Ö–∏."
    ],
    "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ": [
        "üë®‚Äçüíª –ü–∏—à–∏ –∫–æ–¥ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –ø—Ä–∞–∫—Ç–∏–∫–∞ –≤–∞–∂–Ω–µ–µ —Ç–µ–æ—Ä–∏–∏.",
        "üìö –ß–∏—Ç–∞–π —á—É–∂–æ–π –∫–æ–¥ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π, –∫–∞–∫ –æ–Ω —É—Å—Ç—Ä–æ–µ–Ω.",
        "üéØ –°—Ç–∞–≤—å –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏.",
        "üìä –ù–µ –∑–∞–±—ã–≤–∞–π —É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö.",
        "üåê –ò—Å–ø–æ–ª—å–∑—É–π –æ–Ω–ª–∞–π–Ω-—Ä–µ—Å—É—Ä—Å—ã –∏ –∫—É—Ä—Å—ã, —á—Ç–æ–±—ã —Ä–∞—Å—à–∏—Ä—è—Ç—å –∑–Ω–∞–Ω–∏—è."
    ],
    "—Ä–∏—Å–æ–≤–∞–Ω–∏–µ": [
        "üñåÔ∏è –†–∏—Å—É–π –ø–æ 20 –º–∏–Ω—É—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.",
        "üî∑ –ù–∞—á–∏–Ω–∞–π —Å –ø—Ä–æ—Å—Ç—ã—Ö —Ñ–æ—Ä–º –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–π.",
        "üé® –ò–∑—É—á–∞–π —Ä–∞–±–æ—Ç—ã –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ –ø—Ä–æ–±—É–π –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏—Ö —Å—Ç–∏–ª—å –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏.",
        "üåà –ù–µ –±–æ–π—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —Ü–≤–µ—Ç–∞–º–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏.",
        "üßê –ü—Ä–æ—Å–∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–≤–æ–∏ —Ä–∞–±–æ—Ç—ã."
    ],
    "–∏–≥—Ä–∞ –Ω–∞ –≥–∏—Ç–∞—Ä–µ": [
        "üéµ –ü—Ä–∞–∫—Ç–∏–∫—É–π—Å—è —Å –º–µ—Ç—Ä–æ–Ω–æ–º–æ–º –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∏—Ç–º–∞.",
        "üé∏ –£—á–∏—Å—å –Ω–æ–≤—ã–º –∞–∫–∫–æ—Ä–¥–∞–º –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É—Å–ª–æ–∂–Ω—è–π —Ä–µ–ø–µ—Ä—Ç—É–∞—Ä.",
        "üëÇ –°–ª—É—à–∞–π –º—É–∑—ã–∫—É –∏ –ø—ã—Ç–∞–π—Å—è —Ä–∞–∑–±–∏—Ä–∞—Ç—å –ø–µ—Å–Ω–∏ –Ω–∞ —Å–ª—É—Ö.",
        "üéôÔ∏è –ó–∞–ø–∏—Å—ã–≤–∞–π —Å–≤–æ–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.",
        "üë• –ù–∞–π–¥–∏ —É—á–∏—Ç–µ–ª—è –∏–ª–∏ –≥—Ä—É–ø–ø—É –¥–ª—è –æ–±–º–µ–Ω–∞ –æ–ø—ã—Ç–æ–º."
    ]
}

@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏ –∏–∑—É—á–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ —Ö–æ–±–±–∏.\n\n"
        "üìö –¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –Ω–∞–≤—ã–∫ –∏–ª–∏ —Ö–æ–±–±–∏, –∏ —è –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ —Å–æ–≤–µ—Ç–∞–º–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π.\n\n"
        "üìñ –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ø–æ–º–æ—â—å\n"
        "/skill - –≤—ã–±—Ä–∞—Ç—å –Ω–∞–≤—ã–∫ –∏–ª–∏ —Ö–æ–±–±–∏\n"
        "/reset_skill - —Å–±—Ä–æ—Å–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –Ω–∞–≤—ã–∫\n"
        "/motiv - –ø–æ–ª—É—á–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/tip - –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –ø–æ –æ–±—É—á–µ–Ω–∏—é\n\n"
        "–ù–∞–ø–∏—à–∏ /skill —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
    )
    await message.answer(welcome_text)

@dp.message_handler(commands=['help'])
async def cmd_help(message: types.Message):
    help_text = (
        "‚ùì –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è –≤ –∏–∑—É—á–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ —Ö–æ–±–±–∏.\n\n"
        "üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/skill - –≤—ã–±—Ä–∞—Ç—å –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –Ω–∞–≤—ã–∫/—Ö–æ–±–±–∏\n"
        "/reset_skill - —Å–±—Ä–æ—Å–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –Ω–∞–≤—ã–∫\n"
        "/motiv - –ø–æ–ª—É—á–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/tip - –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –Ω–∞–≤—ã–∫—É\n\n"
        "–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–≤—ã–∫–∞ /tip –±—É–¥–µ—Ç –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º."
    )
    await message.answer(help_text)

@dp.message_handler(commands=['skill'])
async def cmd_skill(message: types.Message):
    await SkillStates.waiting_for_skill.set()
    await message.answer(
        "‚úçÔ∏è –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–≤—ã–∫–∞ –∏–ª–∏ —Ö–æ–±–±–∏, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –∏–∑—É—á–∞—Ç—å.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–∏—Å–æ–≤–∞–Ω–∏–µ, –∏–≥—Ä–∞ –Ω–∞ –≥–∏—Ç–∞—Ä–µ –∏ —Ç.–¥."
    )

@dp.message_handler(state=SkillStates.waiting_for_skill)
async def process_skill(message: types.Message, state: FSMContext):
    skill = message.text.strip().lower()
    await state.update_data(chosen_skill=skill)
    await message.answer(f"üëç –û—Ç–ª–∏—á–Ω–æ! –¢—ã –≤—ã–±—Ä–∞–ª –Ω–∞–≤—ã–∫: <b>{skill}</b>.\n–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Å–æ–≤–µ—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π /tip –∏–ª–∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥–æ–π /motiv.", parse_mode=ParseMode.HTML)
    await state.finish()

@dp.message_handler(commands=['reset_skill'])
async def cmd_reset_skill(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("‚ôªÔ∏è –ù–∞–≤—ã–∫ —Å–±—Ä–æ—à–µ–Ω. –¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–π —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /skill.")

@dp.message_handler(commands=['motiv'])
async def cmd_motiv(message: types.Message):
    motiv = random.choice(MOTIVATIONAL_MESSAGES)
    await message.answer(motiv)

@dp.message_handler(commands=['tip'])
async def cmd_tip(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    skill = user_data.get('chosen_skill', '')
    tips = LEARNING_TIPS.get(skill, LEARNING_TIPS['default'])
    tip = random.choice(tips)
    skill_display = skill if skill else "–æ–±—â–∏–π"
    await message.answer(f"üí° –°–æ–≤–µ—Ç –¥–ª—è –Ω–∞–≤—ã–∫–∞ <b>{skill_display}</b>:\n{tip}", parse_mode=ParseMode.HTML)

@dp.errors_handler()
async def global_error_handler(update, exception):
    if isinstance(exception, (BotBlocked, ChatNotFound)):
        logging.warning(f"Bot blocked or chat not found: {exception}")
        return True  # Errors handled
    if isinstance(exception, TelegramAPIError):
        logging.error(f"Telegram API error: {exception}")
        return True
    logging.exception(f"Unexpected error: {exception}")
    return False  # Let others handle

@dp.message_handler()
async def unknown_message(message: types.Message):
    await message.answer("ü§î –Ø –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)


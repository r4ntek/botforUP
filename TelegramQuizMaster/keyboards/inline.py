from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from config import SKILL_CATEGORIES

def get_main_menu() -> InlineKeyboardMarkup:
    """Main menu keyboard"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üéØ –ú–æ–∏ –Ω–∞–≤—ã–∫–∏", callback_data="my_skills"),
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤—ã–∫", callback_data="add_skill")
        ],
        [
            InlineKeyboardButton(text="üìä –ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data="progress"),
            InlineKeyboardButton(text="üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="achievements")
        ],
        [
            InlineKeyboardButton(text="üí° –°–æ–≤–µ—Ç", callback_data="get_tip"),
            InlineKeyboardButton(text="üí™ –ú–æ—Ç–∏–≤–∞—Ü–∏—è", callback_data="get_motivation")
        ],
        [
            InlineKeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics"),
            InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ])
    return keyboard

def get_skill_categories() -> InlineKeyboardMarkup:
    """Skill categories keyboard"""
    keyboard = []
    
    for category in SKILL_CATEGORIES.keys():
        keyboard.append([InlineKeyboardButton(text=category, callback_data=f"category_{category}")])
    
    keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_skills_in_category(category: str) -> InlineKeyboardMarkup:
    """Skills in category keyboard"""
    skills = SKILL_CATEGORIES.get(category, [])
    keyboard = []
    
    # Add skills in rows of 2
    for i in range(0, len(skills), 2):
        row = []
        for j in range(i, min(i + 2, len(skills))):
            skill = skills[j]
            row.append(InlineKeyboardButton(text=skill, callback_data=f"skill_{skill}"))
        keyboard.append(row)
    
    # Add custom skill option
    keyboard.append([InlineKeyboardButton(text="‚úèÔ∏è –°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="custom_skill")])
    keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="add_skill")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_user_skills(skills: dict) -> InlineKeyboardMarkup:
    """User skills keyboard"""
    keyboard = []
    
    for skill_key, skill_data in skills.items():
        skill_name = skill_data["name"]
        streak_emoji = "üî•" if skill_data["streak"] > 0 else "üí§"
        button_text = f"{streak_emoji} {skill_name}"
        keyboard.append([InlineKeyboardButton(text=button_text, callback_data=f"view_skill_{skill_key}")])
    
    if not skills:
        keyboard.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –Ω–∞–≤—ã–∫", callback_data="add_skill")])
    
    keyboard.append([InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_skill_actions(skill_key: str) -> InlineKeyboardMarkup:
    """Skill actions keyboard"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚è±Ô∏è –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data=f"add_session_{skill_key}"),
            InlineKeyboardButton(text="üí° –°–æ–≤–µ—Ç", callback_data=f"skill_tip_{skill_key}")
        ],
        [
            InlineKeyboardButton(text="üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", callback_data=f"materials_{skill_key}"),
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"skill_stats_{skill_key}")
        ],
        [
            InlineKeyboardButton(text="üéØ –¶–µ–ª—å", callback_data=f"set_goal_{skill_key}"),
            InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_skill_{skill_key}")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="my_skills")
        ]
    ])
    return keyboard

def get_session_time() -> InlineKeyboardMarkup:
    """Session time keyboard"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="15 –º–∏–Ω", callback_data="time_15"),
            InlineKeyboardButton(text="30 –º–∏–Ω", callback_data="time_30"),
            InlineKeyboardButton(text="45 –º–∏–Ω", callback_data="time_45")
        ],
        [
            InlineKeyboardButton(text="1 —á–∞—Å", callback_data="time_60"),
            InlineKeyboardButton(text="1.5 —á–∞—Å–∞", callback_data="time_90"),
            InlineKeyboardButton(text="2 —á–∞—Å–∞", callback_data="time_120")
        ],
        [
            InlineKeyboardButton(text="‚úèÔ∏è –°–≤–æ–µ –≤—Ä–µ–º—è", callback_data="custom_time"),
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_skill")
        ]
    ])
    return keyboard

def get_back_to_main() -> InlineKeyboardMarkup:
    """Back to main menu keyboard"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def get_confirmation(action: str, data: str) -> InlineKeyboardMarkup:
    """Confirmation keyboard"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_{action}_{data}"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="cancel")
        ]
    ])
